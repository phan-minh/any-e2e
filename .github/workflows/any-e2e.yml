name: any e2e
run-name: "Trigger Workflows"
on:
  workflow_dispatch:
    inputs: 
      environment: 
        type: choice
        description: Environment
        options:
          - stub
          - sit1
          - sit2
          - sit3
          - sit4
          - uat1
        default: sit1
        required: true
      tag: 
        type: string
        description: Tag description
        default: 'parner-portal,regression,regression-direct,regression-anon'
        required: false
      product:
        type: string
        description: Product description
        default: 'motor,landlord,home'
        required: true
      brand:
        type: choice
        description: Brand description
        options:
          - nrma
          - asb
          - anz
          - bnz
          - ami
          - state
        default: nrma
        required: true 

jobs:
  define-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Generate Matrix
        id: set-matrix
        run: |
          # Get inputs
          environment="${{ github.event.inputs.environment }}"
          tags="${{ github.event.inputs.tag }}"
          products="${{ github.event.inputs.product }}"
          brand="${{ github.event.inputs.brand }}" # Single choice input

          # Split inputs into arrays
          IFS=',' read -r -a tag_array <<< "$tags"
          IFS=',' read -r -a product_array <<< "$products"

          # Initialize the matrix
          matrix="["

          # Create combinations
          for tag in "${tag_array[@]}"; do
            for product in "${product_array[@]}"; do
              combination="{\"environment\":\"$environment\",\"tag\":\"$tag\",\"product\":\"$product\",\"brand\":\"$brand\"}"
              matrix+="$combination,"
            done
          done

          # Remove the trailing comma and close the JSON array
          matrix="${matrix%,}]"

          # Output the matrix
          echo "Matrix: $matrix"
          echo "::set-output name=matrix::$matrix"
    
  execute-tests:
    needs: define-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        combination: ${{ fromJson(needs.define-matrix.outputs.matrix) }}
    steps:
      - name: Run tests for combination
        run: |
          echo "Running tests with the following configuration:"
          echo "Environment: ${{ matrix.combination.environment }}"
          echo "Tag: ${{ matrix.combination.tag }}"
          echo "Product: ${{ matrix.combination.product }}"
          echo "Brand: ${{ matrix.combination.brand }}"